"use strict";(self.webpackChunkumass_compsci_220_github_io=self.webpackChunkumass_compsci_220_github_io||[]).push([[6550],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),h=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=h(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=h(r),m=a,d=p["".concat(l,".").concat(m)]||p[m]||c[m]||o;return r?n.createElement(d,i(i({ref:t},u),{},{components:r})):n.createElement(d,i({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var h=2;h<o;h++)i[h]=r[h];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3920:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>h});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:7},i="Fetching and Web APIs",s={unversionedId:"homework/fetching-and-web-apis",id:"homework/fetching-and-web-apis",title:"Fetching and Web APIs",description:"There is no zip file containing the starter code to download. The remote GitHub repository you were invited to contains the starter code for the assignment.",source:"@site/materials/homework/fetching-and-web-apis.md",sourceDirName:"homework",slug:"/homework/fetching-and-web-apis",permalink:"/materials/homework/fetching-and-web-apis",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Fluent Filter and JSON",permalink:"/materials/homework/fluent-filters-and-json"},next:{title:"Discussion",permalink:"/materials/category/discussion"}},l={},h=[{value:"Overview",id:"overview",level:2},{value:"Learning Objectives",id:"learning-objectives",level:3},{value:"Student Expectations",id:"student-expectations",level:3},{value:"Getting Started",id:"getting-started",level:2},{value:"JavaScript vs TypeScript",id:"javascript-vs-typescript",level:3},{value:"Git Installation",id:"git-installation",level:3},{value:"URLs and Parameters",id:"urls-and-parameters",level:3},{value:"Third-party APIs",id:"third-party-apis",level:3},{value:"Fetching Resources",id:"fetching-resources",level:3},{value:"Rate Limiting",id:"rate-limiting",level:4},{value:"Testing",id:"testing",level:2},{value:"Mock Testing",id:"mock-testing",level:3},{value:"Requirements",id:"requirements",level:2},{value:"Error Handling Requirements",id:"error-handling-requirements",level:3},{value:"Code Duplication Requirements",id:"code-duplication-requirements",level:3},{value:"Git Branch Requirements",id:"git-branch-requirements",level:3},{value:"GitHub Pull Request Requirements",id:"github-pull-request-requirements",level:3},{value:"Git Tutorial",id:"git-tutorial",level:2},{value:"Setting Up the Repo",id:"setting-up-the-repo",level:3},{value:"Creating a Branch",id:"creating-a-branch",level:3},{value:"Committing and Pushing Changes",id:"committing-and-pushing-changes",level:3},{value:"Pull Requests",id:"pull-requests",level:3},{value:"Git Notes",id:"git-notes",level:3},{value:"Resources",id:"resources",level:2},{value:"Programming Tasks",id:"programming-tasks",level:2},{value:"<code>fetchGeoCoord.js</code>",id:"fetchgeocoordjs",level:3},{value:"<code>fetchGeoCoord</code>",id:"fetchgeocoord",level:4},{value:"<code>locationImportantEnough</code>",id:"locationimportantenough",level:4},{value:"<code>fetchCurrentTemperature.js</code>",id:"fetchcurrenttemperaturejs",level:3},{value:"<code>fetchCurrentTemperature</code>",id:"fetchcurrenttemperature",level:4},{value:"<code>tempAvgAboveAtCoords</code>",id:"tempavgaboveatcoords",level:4},{value:"<code>fetchUniversities.js</code>",id:"fetchuniversitiesjs",level:3},{value:"<code>fetchUniversities</code>",id:"fetchuniversities",level:4},{value:"<code>universityNameLengthOrderAscending</code>",id:"universitynamelengthorderascending",level:4},{value:"<code>fetchUniversityWeather</code>",id:"fetchuniversityweather",level:3},{value:"<code>fetchUMassWeather</code>",id:"fetchumassweather",level:3},{value:"<code>fetchUMichWeather</code>",id:"fetchumichweather",level:3},{value:"Working Example",id:"working-example",level:3},{value:"If you are worried about being rate limited with the api you have choosen",id:"if-you-are-worried-about-being-rate-limited-with-the-api-you-have-choosen",level:3},{value:"Collaborating",id:"collaborating",level:2},{value:"Submitting",id:"submitting",level:2}],u={toc:h},p="wrapper";function c(e){let{components:t,...o}=e;return(0,a.kt)(p,(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"fetching-and-web-apis"},"Fetching and Web APIs"),(0,a.kt)("p",null,"There is no zip file containing the starter code to download. The remote GitHub repository you were invited to contains the starter code for the assignment."),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"During this project, you will work as a group to complete an application that collects weather data for universities. You will query various web interfaces to collect information that will be either passed along as arguments to other interfaces or analyzed on its own."),(0,a.kt)("p",null,"This assignment shifts some of the focus from implementation towards collaboration. Please try to make the most out of this assignment. Do your assigned tasks (no more - no less), work amicably with your group (meet in-person and talk with them), and learn from this experience."),(0,a.kt)("p",null,"Between three people, and the time you are given, everyone should be able to do their part. ",(0,a.kt)("strong",{parentName:"p"},"No one should have to pick up the slack of other group members.")," See the ",(0,a.kt)("a",{parentName:"p",href:"#collaborating"},"collaborating section"),"."),(0,a.kt)("h3",{id:"learning-objectives"},"Learning Objectives"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Collaborate with other programmers on a single project"),(0,a.kt)("li",{parentName:"ul"},"Combine different third-party web services into a single asynchronous application"),(0,a.kt)("li",{parentName:"ul"},"Chain and create ",(0,a.kt)("inlineCode",{parentName:"li"},"Promise")," objects"),(0,a.kt)("li",{parentName:"ul"},"Declare and interact with ",(0,a.kt)("inlineCode",{parentName:"li"},"URL")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"URLSearchParam")," instances"),(0,a.kt)("li",{parentName:"ul"},"Design and implement complete unit tests that use advanced techniques such as mock testing.")),(0,a.kt)("h3",{id:"student-expectations"},"Student Expectations"),(0,a.kt)("p",null,"Students will be graded on their ability to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Correctly implement the functions ",(0,a.kt)("a",{parentName:"li",href:"#programming-tasks"},"specified below")),(0,a.kt)("li",{parentName:"ul"},"Resolve all linter warnings"),(0,a.kt)("li",{parentName:"ul"},"Follow the ",(0,a.kt)("a",{parentName:"li",href:"/materials/guidelines/syntax-and-code"},"coding"),", ",(0,a.kt)("a",{parentName:"li",href:"/materials/guidelines/bad-practices"},"bad practice")," and ",(0,a.kt)("a",{parentName:"li",href:"/materials/guidelines/testing"},"testing")," guidelines"),(0,a.kt)("li",{parentName:"ul"},"Design full-coverage ",(0,a.kt)("a",{parentName:"li",href:"#testing"},"unit-tests")," for the functions they implemented",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"See the ",(0,a.kt)("a",{parentName:"li",href:"/materials/guidelines/testing#coverage"},"testing guidelines")," on coverage for more details"))),(0,a.kt)("li",{parentName:"ul"},"Follow the ",(0,a.kt)("a",{parentName:"li",href:"#error-handling-requirements"},"error handling"),", ",(0,a.kt)("a",{parentName:"li",href:"#code-duplication-requirements"},"code duplication"),", ",(0,a.kt)("a",{parentName:"li",href:"#branch-requirements"},"branch"),", and ",(0,a.kt)("a",{parentName:"li",href:"#pull-request-requirements"},"pull request")," requirements."),(0,a.kt)("li",{parentName:"ul"},"Follow the ",(0,a.kt)("a",{parentName:"li",href:"#mock-testing"},"mock testing")," guidelines."),(0,a.kt)("li",{parentName:"ul"},"Implementation of the ",(0,a.kt)("a",{parentName:"li",href:"#working-example"},"working example"),".")),(0,a.kt)("p",null,"There will be substantial manual grading for this homework."),(0,a.kt)("h2",{id:"getting-started"},"Getting Started"),(0,a.kt)("h3",{id:"javascript-vs-typescript"},"JavaScript vs TypeScript"),(0,a.kt)("p",null,"When looking though the starter code you may have noticed that there are no types to be found! What gives? For this homework, we're using JavaScript. There are a few reasons for this. First, we want you all to get some experience using it. Second, we felt that some of the types surrounding promises and asynchronous code were hindering learning for this HW rather than supporting it. You might wonder: If we don't have type signatures do we have to check all inputs to see if they are the valid type? The answer is no. If we say that a function you need to implement takes in a string and a number you can assume that the correct argument type will be passed to the function in our test. Remember, we're not trying to trick you!"),(0,a.kt)("h3",{id:"git-installation"},"Git Installation"),(0,a.kt)("p",null,"For this homework you and your group will be required to use git and GitHub for managing your project. Git is a great tool for collaboration, version control, and much more. It is good to get in the habit of using it now, as it is a tool you will be using for the rest of your career."),(0,a.kt)("p",null,"If you don't have git on your machine, follow the instructions ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/git-guides/install-git"},"here")," to install it."),(0,a.kt)("h3",{id:"urls-and-parameters"},"URLs and Parameters"),(0,a.kt)("p",null,"Source: ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_URL"},"MDN - What is a URL?")),(0,a.kt)("p",null,"A Uniform Resource Locator (URL) is an address for a unique resource on the web. It is what your browser uses to retrieve documents, webpages, JavaScript code, images, and other media and supporting files. Each valid URL first tells your browser where the machine processing the request (the web server) lives. The rest of the URL is used by that web server to service the request and give back the corresponding resource."),(0,a.kt)("p",null,"Here are some examples of URLs:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"https://www.google.com/\nhttps://www.google.com/maps\nhttps://www.google.com/search?q=how+to+exit+vim\n")),(0,a.kt)("p",null,"URLs have a specific structure, which tell both the browser, and the eventual web server, what the request means."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL/mdn-url-all.png",alt:"URL"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"The scheme")," documents the protocol the network request should use",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The web uses ",(0,a.kt)("inlineCode",{parentName:"li"},"https")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"http")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"The authority")," documents where server that will process our request lives",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Consists of the domain name and the port",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The domain maps to a number (called the IP address) that is used to find the web server on the internet"),(0,a.kt)("li",{parentName:"ul"},"The port is a wellknown number that describes where to talk to the web server once you reach the machine",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Port 80 for http and 443 for https"))))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"The path")," describes which resource we want to retrieve",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"When the web server first gets the request it will use the path to find the resource we are requesting"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"The parameters")," describe how we want to query or provide input for that resource",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The ask of the URL"),(0,a.kt)("li",{parentName:"ul"},"What specifically is being search for?"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("inlineCode",{parentName:"p"},"?key1=value1&key2=value2")," are extra parameters provided to the Web server. Those parameters are a list of key/value pairs separated with the & symbol. The Web server can use those parameters to do extra stuff before returning the resource. Each Web server has its own rules regarding parameters, and the only reliable way to know if a specific Web server is handling parameters is by asking the Web server owner."))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"The anchor")," (irrelevant to this project) will tell the browser where specifically to scroll down to on the page")),(0,a.kt)("p",null,"Looking more closely, at the URLs above:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"https://www.google.com/")," is a URL requesting the resource ",(0,a.kt)("inlineCode",{parentName:"li"},"/")," at ",(0,a.kt)("inlineCode",{parentName:"li"},"www.google.com")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"https://www.google.com/maps")," is a URL requesting the resource ",(0,a.kt)("inlineCode",{parentName:"li"},"/maps")," at ",(0,a.kt)("inlineCode",{parentName:"li"},"www.google.com")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"https://www.google.com/search?q=how+to+exit+vim")," is a URL requesting the resource ",(0,a.kt)("inlineCode",{parentName:"li"},"/search")," at ",(0,a.kt)("inlineCode",{parentName:"li"},"www.google.com")," providing a parameter ",(0,a.kt)("inlineCode",{parentName:"li"},"q")," (short for query) with a value ",(0,a.kt)("inlineCode",{parentName:"li"},"how+to+exit+vim"))),(0,a.kt)("p",null,"If you notice, the value of the ",(0,a.kt)("inlineCode",{parentName:"p"},"q")," parameter looks a little weird. There are some characters that cannot be part of a URL (for example, a space) and some that are reserved for a specific purpose (like ",(0,a.kt)("inlineCode",{parentName:"p"},"&")," separating parameters). To support passing these characters to parameters, strings first need to be put into a format that can be recognized as a URL. This is called ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Percent-encoding"},"percent encoding"),". Luckily, there is a class in the Node.js standard library to handle all of that for you."),(0,a.kt)("p",null,"During this homework, you will construct URLs with specific parameters using the ",(0,a.kt)("inlineCode",{parentName:"p"},"URL")," class in the Node.js standard library. As an example, if I wanted to make a function that constructs a Google search URL from a given query, I would write:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { URL } from "url"; // Import the URL class from the url library\n\nfunction makeSearchURL(query: string): string {\n  // Construct a new URL object using the resource URL\n  const searchURL = new URL("https://www.google.com/search");\n\n  // Access the searchParams field of the constructed url\n  // The field holds an instance of the URLSearchParams\n  // Add a new "q" parameter with the value of the functions input\n  searchURL.searchParams.append("q", query);\n\n  return searchURL.toString(); // Return the resulting complete URL\n}\n\nmakeSearchURL("vim tutorial youtube");\n// -> https://www.google.com/search?q=vim+tutorial+youtube\nmakeSearchURL("How to draw the & symbol?");\n// -> https://www.google.com/?q=How+to+draw+the+%26+symbol%3F\nmakeSearchURL("\u4f60\u597d");\n// -> https://www.google.com/search?q=%E4%BD%A0%E5%A5%BD\n')),(0,a.kt)("p",null,"More documentation, and examples, for the ",(0,a.kt)("inlineCode",{parentName:"p"},"URL")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"URLSearchParams")," class can be found in the ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/dist/latest-v18.x/docs/api/url.html"},"Node.js standard library documentation"),"."),(0,a.kt)("h3",{id:"third-party-apis"},"Third-party APIs"),(0,a.kt)("p",null,"Source: ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Introduction"},"MDN - Introduction to web APIs")),(0,a.kt)("p",null,"An Application Programming Interface (",(0,a.kt)("strong",{parentName:"p"},"API"),") is the interface exposed by an application for other pieces of software to interact with. Web APIs (APIs on the world wide web) are a popular mechanism for exposing information and providing functionality to websites or other programs. A lot of websites are just an interface for interacting with a series of web APIs. These interfaces allow developers to create complex programs without doing all the heavy lifting."),(0,a.kt)("p",null,"In this homework, you will be interacting with a few third-party web APIs that provide information about universities, longitude and latitude, and weather data. These web APIs have various URL parameters that provide different functionality."),(0,a.kt)("p",null,"These web APIs will return unformatted JSON results. It is recommended that you either use Firefox or install ",(0,a.kt)("a",{parentName:"p",href:"https://chrome.google.com/webstore/detail/json-formatter/bcjindcccaagfpapjjmafapmmgkkhgoa"},"this chrome extension")," so the results become readable. As an example:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Raw JSON",src:r(64).Z,width:"1250",height:"651"})),(0,a.kt)("p",null,"Could look like this instead:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Formatted JSON",src:r(481).Z,width:"1255",height:"783"})),(0,a.kt)("p",null,"You will be provided with URLs to various APIs and the parameters they accept. It is your job to research these APIs further, come up with examples, and understand their behavior."),(0,a.kt)("h3",{id:"fetching-resources"},"Fetching Resources"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Fetching")," is the process of retrieving the content from a URL across the web. Before your search results are displayed, your browser first needs to fetch the contents of the page located at the URL."),(0,a.kt)("p",null,"As you might imagine, this process is done asynchronously. Your browser does not wait for a fetch request to return before it allows you to do anything. It will fetch the requested page, allow you to switch tabs or type in other queries, and ",(0,a.kt)("em",{parentName:"p"},"then")," after the fetch resolves it will display the content."),(0,a.kt)("p",null,"Here is an example of ",(0,a.kt)("inlineCode",{parentName:"p"},"fetch"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import path from "path"; // Node.js standard library for resolving arbitrary paths (like those in a url)\n\nfetch("https://spire-api.melanson.dev/instructors/?search=marius+minea") // fetch the /instructions resource with a "search" parameter\n  .then(res => res.ok ? res.json() : Promise.reject(new Error(`Error in response: ${res.statusText}`))) // We need to check if there was an error in the response.\n  .then(\n    json =>\n      Array.isArray(json.results) && json.results.length > 0 // This API returns an object with a "results" field as an array of objects\n        ? Promise.resolve(json.results[0]) // Resolve with the first object if present, an object with a url, name, and id\n        : Promise.reject(new Error("No results found.")) // Reject if nothing is present\n  )\n  .then(data => fetch(path.join(data.url, "/sections/"))) // Fetch the associated /sections resource for an instructor page\n  .then(res => res.ok ? res.json() : Promise.reject(new Error(`Error in response: ${res.statusText}`))) // Again, we need to check if there was an error in the response.\n  .then(json => console.log(`Marius Minea has taught ${json.count} different sections at UMass!`)) // Do something with the final result\n  .catch(err => console.log("Unable to get section information: " + err));\n')),(0,a.kt)("h4",{id:"rate-limiting"},"Rate Limiting"),(0,a.kt)("p",null,"An important aspect of fetching is ",(0,a.kt)("a",{parentName:"p",href:"https://www.cloudflare.com/learning/bots/what-is-rate-limiting/"},"rate-limiting")," and self-throttling (preventing your code from sending too many requests). With each request, there is computational overhead on both ends of the network - your local machine sending a request and waiting for the response, ",(0,a.kt)("em",{parentName:"p"},"and")," a server listing for requests, querying internal services, and formulating a response. Consider a chat app (Discord), if you try sending a bunch of messages at once the then the client (the software on your computer) will stop you. This protects Discord's servers from getting too many (mostly invalid) requests. Which allows valid requests to get serviced more quickly."),(0,a.kt)("p",null,"When using publicly available APIs (the ones we are using in this homework), make sure you play by their rules and do not send more requests than needed. Otherwise you run the risk of being rate-limited (unable to send requests for a duration of time) or lose access to the service (banned)."),(0,a.kt)("p",null,"For this HW we have set up a caching server at ",(0,a.kt)("a",{parentName:"p",href:"https://220.maxkuechen.com/"},"https://220.maxkuechen.com/"),". This server will relay requests to the proper APIs and will ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Cache_(computing)"},"cache")," the response for some period. As a result we are requesting information from the actual API much less frequently. While once API call is very cheap, think about how often your tests and autograder tests get run over the course of the HW for 200+ students."),(0,a.kt)("p",null,"In this HW you will be working with the ",(0,a.kt)("a",{parentName:"p",href:"https://geocode.maps.co/"},"geocode")," API, the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Hipo/university-domains-list"},"universites")," API, and the ",(0,a.kt)("a",{parentName:"p",href:"https://open-meteo.com"},"weather")," API, as well as other APIs you choose yourself. Feel free to read their respective docs. You will be interacting with these APIs through our caching server. Each programming task outlines what endpoint to fetch the data from."),(0,a.kt)("h2",{id:"testing"},"Testing"),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"https://jestjs.io/docs/asynchronous"},'jest documentation: "Testing Asynchronous Code"'),"."),(0,a.kt)("p",null,"Testing asynchronous code is a little different from testing synchronous code. One way or another, the testing framework needs to know that there is pending work to be done. ",(0,a.kt)("strong",{parentName:"p"},'We tell the testing framework we are still "doing" work by returning a ',(0,a.kt)("inlineCode",{parentName:"strong"},"Promise")," in the test function rather than returning nothing"),"."),(0,a.kt)("p",null,"As an example, one of the given tests returns a ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise")," that has a handler that does the assertions on the result."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'describe("fetchGeoCoord", () => {\n  it("follows type specification", () => {\n    const promise = fetchGeoCoord("University of Massachusetts Amherst");\n\n    return promise.then(result => {\n      assert(typeof result === "object"); //  Assert the result is an object\n      assert(typeof result.lon === "number"); // Assert that the lon value is a number\n      assert(typeof result.lat === "number"); // Assert that the lat value is a number\n      assert(typeof result.importances === "object"); // Assert that the importances value is an object\n      assert(Object.keys(result).length === 3); // Assert there are only two keys in the object\n    });\n  });\n});\n')),(0,a.kt)("p",null,"Your tests should follow this similar pattern (",(0,a.kt)("inlineCode",{parentName:"p"},"return foo().then(result => {/* assertions */ })"),"). Alternatively, you could use ",(0,a.kt)("inlineCode",{parentName:"p"},"async"),"/",(0,a.kt)("inlineCode",{parentName:"p"},"await")," syntax."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'describe("fetchGeoCoord", () => {\n  it("follows type specification", async () => {\n    const result = await fetchGeoCoord("University of Massachusetts Amherst");\n    assert(typeof result === "object"); //  Assert the result is an object\n    assert(typeof result.lon === "number"); // Assert that the lon value is a number\n    assert(typeof result.lat === "number"); // Assert that the lat value is a number\n    assert(typeof result.importances === "object"); // Assert that the importances value is an object\n    assert(Object.keys(result).length === 3); // Assert there are only two keys in the object\n  });\n});\n')),(0,a.kt)("p",null,"If you want to extract the resolve or rejection value, you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},".resolves")," and ",(0,a.kt)("inlineCode",{parentName:"p"},".rejects")," matchers. These will error if the promise does not do as stated."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'test("fetchUniversities returns empty results", () => {\n  return expect(fetchUniversities("place that does not exist")).resolves.toEqual([]);\n});\n')),(0,a.kt)("p",null,"Use what works best for you and your group members."),(0,a.kt)("p",null,"Additionally, some methods may take a while to complete - but this is OK as it is expected behavior with a large amount of requests. You may need to increase the jest test timeout from 5000ms (5 seconds) to something around 30 seconds. You can put this at the top level on your test file to change the timeout:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"// 1000ms\nconst SECOND = 1000;\n// 30 second timeout\njest.setTimeout(30 * SECOND);\n")),(0,a.kt)("h3",{id:"mock-testing"},"Mock Testing"),(0,a.kt)("p",null,"In addition to the testing above, some functions will require you to test them by mocking ",(0,a.kt)("inlineCode",{parentName:"p"},"fetch"),". In other words, you'll be intercepting the ",(0,a.kt)("inlineCode",{parentName:"p"},"fetch")," call and have it resolve to some predictable value. There are a number of reasons for why we might want to do this."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"The API might respond differently to the same query. For example, when fetching the current weather the temperature will obviously be different during the day. If we have some function that does different actions based on how warm it is, we run into a problem. With mock testing, we can guarantee that fetch will return a response consistent with what we're trying to test.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"We want to know how our code responds to different API scenarios that we cannot test for. For example, does our code correctly handle an Internal Server Error?")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Finally the API might be rate limited or unavailable. This makes testing hard and expensive. With mock testing we can reserve API calls to the API for only some tests saving time and money. See the documentation for more information on this: ",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/jest-fetch-mock"},"https://www.npmjs.com/package/jest-fetch-mock"),"."))),(0,a.kt)("p",null,"The lecture slides ",(0,a.kt)("a",{parentName:"p",href:"https://umamherst.instructure.com/courses/8875/files/4853295?module_item_id=887630"},"Testing Asynchronous Code in Week 10")," give a step by step description of how to properly mock ",(0,a.kt)("inlineCode",{parentName:"p"},"fetch"),"."),(0,a.kt)("p",null,"Some functions will require you to write mock tests explicitly. You are welcome to write mock tests for other functions as well."),(0,a.kt)("p",null,"If you'd like to mock every test in a ",(0,a.kt)("inlineCode",{parentName:"p"},"describe")," block, you can follow this format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'// Other imports\nimport fetchMock from "jest-fetch-mock";\n\ndescribe("exampe tests", () => {\n  beforeEach(() => {\n    fetchMock.enableMocks();\n  });\n\n  // Both tests will have mocking enabled for fetch\n  it("test 1", () => { /* Test logic here */ });\n  it("test 2", () => { /* Test logic here */ });\n\n  // Last line of describe block:\n  afterEach(() => {\n    fetchMock.resetMocks();\n    fetchMock.disableMocks();\n  });\n});\n')),(0,a.kt)("p",null,"This is one way to guarantee all the tests in your ",(0,a.kt)("inlineCode",{parentName:"p"},"describe")," block will mock ",(0,a.kt)("inlineCode",{parentName:"p"},"fetch"),". You can also follow the above mentioned lecture slides, or any other method that works for you. When in doubt, check the jest-fetch-mock documentation in ",(0,a.kt)("a",{parentName:"p",href:"#resources"},"Resources")," and use a debugger to ensure that you are indeed mocking or not mocking."),(0,a.kt)("h2",{id:"requirements"},"Requirements"),(0,a.kt)("h3",{id:"error-handling-requirements"},"Error Handling Requirements"),(0,a.kt)("p",null,"For all the ",(0,a.kt)("a",{parentName:"p",href:"#programming-tasks"},"programming tasks")," below, if the response is not ok, then the promise should reject with an ",(0,a.kt)("strong",{parentName:"p"},"Error")," object that contains an informational error message, or the message the programming task tells you to reject with. This rejection reason should propagate, meaning the returned promises from these functions should reject with the same reason. You should not try to recover in any way."),(0,a.kt)("h3",{id:"code-duplication-requirements"},"Code Duplication Requirements"),(0,a.kt)("p",null,"This is the first assignment where there is more than one source file. You should not have duplication between two source files ",(0,a.kt)("em",{parentName:"p"},"or")," within one source file. There is the ",(0,a.kt)("inlineCode",{parentName:"p"},"./src/utility.js")," file used to declare and export members accordingly."),(0,a.kt)("h3",{id:"git-branch-requirements"},"Git Branch Requirements"),(0,a.kt)("p",null,"Of the files in this homework, there are 3 of them that each should be completed by a different group member: ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchGeoCoord.js"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchCurrentTemperature.js"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchUniversities.js"),". The respective assigned group member is responsible for completing both functions of the respective file, and its test file with tests for all the functions in it, and they must do so on a ",(0,a.kt)("a",{parentName:"p",href:"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-branches"},"branch"),". The branch should be created from the ",(0,a.kt)("strong",{parentName:"p"},"main")," branch, and its name should be as follows: ",(0,a.kt)("inlineCode",{parentName:"p"},"[my first name]-[file name]"),". For example, if my name is John and my group and I have decided I will be doing the ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchGeoCoord.js")," file, I will create a branch from main called ",(0,a.kt)("inlineCode",{parentName:"p"},"john-fetchGeoCoord"),". This will be demonstrated in the ",(0,a.kt)("a",{parentName:"p",href:"#git-tutorial"},"Git Tutorial")," section. So all in all, the branch should only modify 2 files: the file the group member is responsible for, and its corresponding test file. ",(0,a.kt)("strong",{parentName:"p"},"We will check to see that each member creates their branches in this way and that they're the only member to work on that branch. This will be part of the manual grading for this assignment.")),(0,a.kt)("p",null,"You are not required to create any other branches for the homework. However, creating branches for new features of a project is good practice. For example, it would be best practice to create branches for ",(0,a.kt)("inlineCode",{parentName:"p"},"universityWeather.js")," (see below for description) and your group's working example, and then merge them into main upon their completion."),(0,a.kt)("h3",{id:"github-pull-request-requirements"},"GitHub Pull Request Requirements"),(0,a.kt)("p",null,"When a member of your group believes they've finished working on the branch they're responsible for (one of ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchGeoCoord"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchCurrentTemperature"),", or ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchUniversities"),"), they will create a pull request. The other 2 members of the group ",(0,a.kt)("strong",{parentName:"p"},"must review the pull request")," and approve it if it's ready to be merged into main. The only pull requests your group are required to create and merge into main are pull requests for the branches outlined in ",(0,a.kt)("a",{parentName:"p",href:"#branch-requirements"},"Branch Requirements"),". ",(0,a.kt)("strong",{parentName:"p"},"This will be part of the manual grading for this assignment.")),(0,a.kt)("p",null,"This whole process is covered in the ",(0,a.kt)("a",{parentName:"p",href:"#git-tutorial"},"Git Tutorial")," section."),(0,a.kt)("h2",{id:"git-tutorial"},"Git Tutorial"),(0,a.kt)("p",null,"Here, we will give a short overview of how to do all the git operations your group will need to complete this assignment."),(0,a.kt)("h3",{id:"setting-up-the-repo"},"Setting Up the Repo"),(0,a.kt)("p",null,"Open the GitHub repo you were invited to by email and click the green code button and copy the https link to the repo into your clipboard:"),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/git/1.png"})),(0,a.kt)("p",null,"On your machine, open your terminal of choice in the directory in which you want the repo, and run the command ",(0,a.kt)("inlineCode",{parentName:"p"},"git clone <link you just copied in the previous step>")," (without the angle brackets of course):"),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/git/2.png"})),(0,a.kt)("p",null,"Now the repo is on your local machine!"),(0,a.kt)("h3",{id:"creating-a-branch"},"Creating a Branch"),(0,a.kt)("p",null,"When you're ready to create a branch, open the directory containing your local repo in VSCode and click the Source Control tab on the left, click the 3 dots and click the 'Create Branch' option:"),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/git/3.png",width:"75%",height:"75%"})),(0,a.kt)("p",null,"In the opened console at the top of the screen, type the name of the branch you wish to create using the previously mentioned naming convention:"),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/git/4.png"})),(0,a.kt)("p",null,"Now click the 'Publish Branch' button in the Source Control tab:"),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/git/5.png"})),(0,a.kt)("p",null,"Now, in the bottom left corner, you should see that you are now on the branch you just created:"),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/git/6.png"})),(0,a.kt)("p",null,"If you want to switch the branch you're working on, click the button with the branch name in the bottom left corner and select the branch you want to switch to:"),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/git/7.png"})),(0,a.kt)("h3",{id:"committing-and-pushing-changes"},"Committing and Pushing Changes"),(0,a.kt)("p",null,"Once you write some code and make modifications to your homework, you are ready to commit your changes and push them to the remote repository on GitHub (in the below pictures, the modifications were the addition of a ",(0,a.kt)("inlineCode",{parentName:"p"},"console.log")," statement to the ",(0,a.kt)("inlineCode",{parentName:"p"},"utility.js")," file)."),(0,a.kt)("p",null,"In the Source Control tab on the left, enter a meaningful commit message and click the 'Commit' button:"),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/git/9.png",width:"95%"})),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/git/10.png"})),(0,a.kt)("p",null,"Finally, click the 'Sync Changes' button:"),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/git/11.png"})),(0,a.kt)("p",null,"Your changes are now on the remote repository!"),(0,a.kt)("h3",{id:"pull-requests"},"Pull Requests"),(0,a.kt)("p",null,"Whenever a branch has been pushed to, on the remote repository on GitHub you will see this button appear:"),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/git/13.png"})),(0,a.kt)("p",null,"If you believe your work on that branch is done and you're ready to merge that branch into main, you can click the 'Compare & pull request' button above. Now create your pull request detailing the changes you've made:"),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/git/14.png"})),(0,a.kt)("p",null,"Once your two other group members have approved the pull request, click the 'Merge pull request' button to merge that branch into main:"),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/git/15.png"})),(0,a.kt)("p",null,"And you've successfully completed a pull request!"),(0,a.kt)("p",null,"You will see this option to delete the branch after merging. ",(0,a.kt)("strong",{parentName:"p"},"Do not")," delete the branch as we will be looking at them to grade your homework. However, note that branches can always be restored."),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/git/16.png"})),(0,a.kt)("h3",{id:"git-notes"},"Git Notes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"It is good practice to commit often."),(0,a.kt)("li",{parentName:"ul"},"If you mess something up on a branch (this could be main), remember that you can always revert to a prior commit."),(0,a.kt)("li",{parentName:"ul"},"GitHub allows you to view a branch's commit history."),(0,a.kt)("li",{parentName:"ul"},"If you encounter any merge conflicts when resolving your pull requests, refer to the ",(0,a.kt)("a",{parentName:"li",href:"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/addressing-merge-conflicts/resolving-a-merge-conflict-on-github"},"documentation here")," on how to handle them."),(0,a.kt)("li",{parentName:"ul"},"While git is very powerful, it's also complex, and everyone has trouble using it time-to-time - so don't be discouraged!")),(0,a.kt)("h2",{id:"resources"},"Resources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"MDN Web Docs: Promise")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises"},"MDN Web Docs: Using Promises")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Promises"},"MDN Web Docs: How to use promises")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/jest-fetch-mock"},"jest-fetch-mock"))),(0,a.kt)("h2",{id:"programming-tasks"},"Programming Tasks"),(0,a.kt)("h3",{id:"fetchgeocoordjs"},(0,a.kt)("inlineCode",{parentName:"h3"},"fetchGeoCoord.js")),(0,a.kt)("p",null,"Write the following functions inside of ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchGeoCoord.js"),". These functions should be implemented by the first group member on a separate git branch. See the ",(0,a.kt)("a",{parentName:"p",href:"#git-branch-requirements"},"Git Branch Requirements")," section for instructions."),(0,a.kt)("h4",{id:"fetchgeocoord"},(0,a.kt)("inlineCode",{parentName:"h4"},"fetchGeoCoord")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface GeoCoord {\n    lon: number,\n    lat: number,\n    importances: number[]\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export function fetchGeoCoord(query: string): Promise<GeoCoord> {\n  // TODO\n}\n")),(0,a.kt)("p",null,"This function should take in a query string and return a ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise")," that fulfils with the first geo-coordinate result. If the ",(0,a.kt)("inlineCode",{parentName:"p"},"ok")," property of the returned ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Response"},"Response")," object is false, it should reject with an ",(0,a.kt)("inlineCode",{parentName:"p"},"Error")," with the ",(0,a.kt)("inlineCode",{parentName:"p"},"statusText")," property of ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Response"},"Response")," as its error message. The above interface tells you what the object looks like (note that interfaces are a feature of TypeScript and are not in JavaScript)."),(0,a.kt)("p",null,"Use the following API, ",(0,a.kt)("a",{parentName:"p",href:"https://220.maxkuechen.com/geoCoord/search?q=query+goes+here"},"https://220.maxkuechen.com/geoCoord/search?q=query+goes+here"),", to retrieve your results. The base URL should be ",(0,a.kt)("inlineCode",{parentName:"p"},'"https://220.maxkuechen.com"')," and there should be one URL search parameter ",(0,a.kt)("inlineCode",{parentName:"p"},'"q"')," for the query. This API returns an array of objects containing a ",(0,a.kt)("inlineCode",{parentName:"p"},"lon"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"lat"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"importances")," field."),(0,a.kt)("p",null,"See the ",(0,a.kt)("a",{parentName:"p",href:"#urls-and-parameters"},"getting started section on queries")," if you are confused. Use the ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/parseFloat"},(0,a.kt)("inlineCode",{parentName:"a"},"Number.parseFloat"))," function to convert to a number if needed."),(0,a.kt)("h4",{id:"locationimportantenough"},(0,a.kt)("inlineCode",{parentName:"h4"},"locationImportantEnough")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export function locationImportantEnough(place: string, importanceThreshold: number) {\n    // TODO\n}\n")),(0,a.kt)("p",null,"This function takes a string for a place and a number for the importanceThreshold. It should call ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchGeoCoord")," and return true if the maximum importance value in the importances field is greater than the importanceThreshold that was passed in. This function should propagate errors from ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchGeoCoord"),"."),(0,a.kt)("p",null,"You will need to write mock tests for this function since places have different importance values during the day. You should also test what happens if the ",(0,a.kt)("inlineCode",{parentName:"p"},"ok")," property of the API's returned ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Response"},"Response")," object is false. You need to write at least three mock tests."),(0,a.kt)("h3",{id:"fetchcurrenttemperaturejs"},(0,a.kt)("inlineCode",{parentName:"h3"},"fetchCurrentTemperature.js")),(0,a.kt)("p",null,"Write the following functions inside of ",(0,a.kt)("inlineCode",{parentName:"p"},"./src/fetchCurrentTemperature.js"),". These functions should be implemented by the second group member on a separate git branch. See the ",(0,a.kt)("a",{parentName:"p",href:"#git-branch-requirements"},"Git Branch Requirements")," section for instructions."),(0,a.kt)("h4",{id:"fetchcurrenttemperature"},(0,a.kt)("inlineCode",{parentName:"h4"},"fetchCurrentTemperature")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface TemperatureReading {\n  time: string[];\n  temperature_2m: number[];\n}\n\nexport function fetchCurrentTemperature(coords: GeoCoord): Promise<TemperatureReading> {\n  // TODO\n}\n")),(0,a.kt)("p",null,"This function should take in a longitude and latitude and return a ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise")," that fulfils with an object. The object should have two fields called ",(0,a.kt)("inlineCode",{parentName:"p"},"time")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"temperature_2m"),". The ",(0,a.kt)("inlineCode",{parentName:"p"},"time")," field should be an array of times and the ",(0,a.kt)("inlineCode",{parentName:"p"},'"temperature_2m"')," should be an array of corresponding temperature measurements. If the ",(0,a.kt)("inlineCode",{parentName:"p"},"ok")," property of the returned ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Response"},"Response")," object is false, it should reject with an ",(0,a.kt)("inlineCode",{parentName:"p"},"Error")," with the ",(0,a.kt)("inlineCode",{parentName:"p"},"statusText")," property of ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Response"},"Response")," as its error message. The above interface tells you what the object looks like (note that interfaces are a feature of TypeScript and are not in JavaScript)."),(0,a.kt)("p",null,"Use the ",(0,a.kt)("a",{parentName:"p",href:"https://220.maxkuechen.com/currentTemperature/forecast?latitude=40&longitude=40&hourly=temperature_2m&temperature_unit=fahrenheit"},"https://220.maxkuechen.com/currentTemperature/forecast?latitude=40&longitude=40&hourly=temperature_2m&temperature_unit=fahrenheit")," API to retrieve your result. It has ",(0,a.kt)("inlineCode",{parentName:"p"},'"latitude"')," and ",(0,a.kt)("inlineCode",{parentName:"p"},'"longitude"')," parameters. You should set the ",(0,a.kt)("inlineCode",{parentName:"p"},'"hourly"')," parameter to ",(0,a.kt)("inlineCode",{parentName:"p"},'"temperature_2m"'),", and the ",(0,a.kt)("inlineCode",{parentName:"p"},'"temperature_unit"')," parameter to ",(0,a.kt)("inlineCode",{parentName:"p"},'"fahrenheit"'),"."),(0,a.kt)("h4",{id:"tempavgaboveatcoords"},(0,a.kt)("inlineCode",{parentName:"h4"},"tempAvgAboveAtCoords")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export function tempAvgAboveAtCoords(coords: {lat: number, lon: number}, temp: number) {\n    // TODO\n}\n")),(0,a.kt)("p",null,"This function should call ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchCurrentTemperature")," with the supplied coordinates and then return true if the average of the temperatures in ",(0,a.kt)("inlineCode",{parentName:"p"},"temperature_2m")," is greater than temp, false otherwise. This function should propagate errors from ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchCurrentTemperature"),"."),(0,a.kt)("p",null,"You will need to write mock tests for this function since temperatures change during the day. You should also test what happens if the ",(0,a.kt)("inlineCode",{parentName:"p"},"ok")," property of the API's returned ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Response"},"Response")," object is false. You need to write at least three mock tests."),(0,a.kt)("h3",{id:"fetchuniversitiesjs"},(0,a.kt)("inlineCode",{parentName:"h3"},"fetchUniversities.js")),(0,a.kt)("p",null,"Write the following functions inside of ",(0,a.kt)("inlineCode",{parentName:"p"},"./src/fetchUniversities.js"),". These functions should be implemented by the third group member on a separate git branch. See the ",(0,a.kt)("a",{parentName:"p",href:"#git-branch-requirements"},"Git Branch Requirements")," section for instructions."),(0,a.kt)("h4",{id:"fetchuniversities"},(0,a.kt)("inlineCode",{parentName:"h4"},"fetchUniversities")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export function fetchUniversities(query: string): Promise<string[]> {\n  // TODO\n}\n")),(0,a.kt)("p",null,"This function should take in a query string and return a ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise")," that fulfils with an array of university names. If the ",(0,a.kt)("inlineCode",{parentName:"p"},"ok")," property of the returned ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Response"},"Response")," object is false, it should reject with an ",(0,a.kt)("inlineCode",{parentName:"p"},"Error")," with the ",(0,a.kt)("inlineCode",{parentName:"p"},"statusText")," property of ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Response"},"Response")," as its error message."),(0,a.kt)("p",null,"Use the following API, ",(0,a.kt)("a",{parentName:"p",href:"https://220.maxkuechen.com/universities/search?name=name+query+goes+here"},"https://220.maxkuechen.com/universities/search?name=name+query+goes+here"),", retrieve your result. It has a ",(0,a.kt)("inlineCode",{parentName:"p"},'"name"')," parameter to search for universities with a similar name. ",(0,a.kt)("strong",{parentName:"p"},"If there are no results (the returned JSON is an empty array), resolve to an empty array.")),(0,a.kt)("h4",{id:"universitynamelengthorderascending"},(0,a.kt)("inlineCode",{parentName:"h4"},"universityNameLengthOrderAscending")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export function universityNameLengthOrderAscending(queryName: string) {\n    // TODO\n}\n")),(0,a.kt)("p",null,"The function should call ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchUniversities")," with the given query and then return true if the order of strings in the resulting array are ordered in ascending order by length, false otherwise. This function should propagate errors from ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchUniversities"),"."),(0,a.kt)("p",null,"You will need to write mock tests for this function since the order of university names from the API is not guaranteed. You should also test what happens if the ",(0,a.kt)("inlineCode",{parentName:"p"},"ok")," property of the API's returned ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Response"},"Response")," object is false. You need to write at least three mock tests."),(0,a.kt)("h3",{id:"fetchuniversityweather"},(0,a.kt)("inlineCode",{parentName:"h3"},"fetchUniversityWeather")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"This function should be done as a group, after each member has completed their individual tasks")),(0,a.kt)("p",null,"Write a function with, inside of ",(0,a.kt)("inlineCode",{parentName:"p"},"./src/universityWeather.js"),", the following type signature:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface AverageTemperatureResults {\n  totalAverage: number;\n  [key: string]: number;\n}\n\nexport function fetchUniversityWeather(\n  universityQuery: string,\n  transformName?: (s: string) => string\n): Promise<AverageTemperatureResults> {\n  // TODO\n}\n")),(0,a.kt)("p",null,"This function should take in a query string and return a ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise")," that fulfils with an object that contains the total average and individual average temperatures of all universities matching the given ",(0,a.kt)("inlineCode",{parentName:"p"},"universityQuery")," string. ",(0,a.kt)("strong",{parentName:"p"},"The optionally provided ",(0,a.kt)("inlineCode",{parentName:"strong"},"transformName")," function should be applied to each university name before it is transformed into a ",(0,a.kt)("inlineCode",{parentName:"strong"},"GeoCoord"),".")," The total average should be in a field called ",(0,a.kt)("inlineCode",{parentName:"p"},"totalAverage")," and the individual averages should use the name of the university as a key. The keys should be the original, untransformed, names. The above interface tells you what the object looks like (note that interfaces are a feature of TypeScript and are not in JavaScript)."),(0,a.kt)("p",null,"If there are no matching universities you should reject with an error:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'new Error("No results found for query.");\n')),(0,a.kt)("p",null,"As an example, if there were three universities found by the query (University One, University Two, University Three), then the object might look something like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'{\n  totalAverage: 50,\n  "University One": 60,\n  "University Two": 40,\n  "University Three": 50\n}\n')),(0,a.kt)("h3",{id:"fetchumassweather"},(0,a.kt)("inlineCode",{parentName:"h3"},"fetchUMassWeather")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"This function should be done as a group, after completing all previous tasks")),(0,a.kt)("p",null,"Write a function, inside of ",(0,a.kt)("inlineCode",{parentName:"p"},"universityWeather.js"),", with the following type signature:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export function fetchUMassWeather(): Promise<AverageTemperatureResults> {\n  // TODO\n}\n")),(0,a.kt)("p",null,'This function should find the average temperature of all universities in the "University of Massachusetts" system. Use an appropriate function from a previous task to compute your result. Return the result unchanged.'),(0,a.kt)("p",null,"You may notice that the following query, ",(0,a.kt)("a",{parentName:"p",href:"https://220.maxkuechen.com/geoCoord/search?q=University+of+Massachusetts+at+Amherst"},"https://220.maxkuechen.com/geoCoord/search?q=University+of+Massachusetts+at+Amherst"),", returns no results, but ",(0,a.kt)("a",{parentName:"p",href:"https://220.maxkuechen.com/geoCoord/search?q=University+of+Massachusetts+Amherst"},"https://220.maxkuechen.com/geoCoord/search?q=University+of+Massachusetts+Amherst")," does. You will need to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"transformName")," parameter to cover this case. Look at the documentation for the ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String"},(0,a.kt)("inlineCode",{parentName:"a"},"String")," object")," and figure out how to handle it."),(0,a.kt)("h3",{id:"fetchumichweather"},(0,a.kt)("inlineCode",{parentName:"h3"},"fetchUMichWeather")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"This function should be done as a group, after completing all previous tasks")),(0,a.kt)("p",null,"Write a function, inside of ",(0,a.kt)("inlineCode",{parentName:"p"},"universityWeather.js"),", with the following type signature:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export function fetchUMichWeather(): Promise<AverageTemperatureResults> {\n  // TODO\n}\n")),(0,a.kt)("p",null,'This function should find the average temperature of all universities in the "University of Michigan" system. Use an appropriate function from a previous task to compute your result. Return the result unchanged. This function should only be a single statement.'),(0,a.kt)("h3",{id:"working-example"},"Working Example"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"This task should be completed as a group")),(0,a.kt)("p",null,"Using any free ones you can find (here is a ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/public-api-lists/public-api-lists"},"a long list"),"), write a short program inside of ",(0,a.kt)("inlineCode",{parentName:"p"},"main.js")," that calculates some interesting statistics."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Requirements:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Must use ",(0,a.kt)("inlineCode",{parentName:"li"},"fetch"),", either directly or indirectly"),(0,a.kt)("li",{parentName:"ul"},"At least one new type of API call",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The program cannot consist of functions defined in ",(0,a.kt)("a",{parentName:"li",href:"#programming-tasks"},"Programming Tasks")),(0,a.kt)("li",{parentName:"ul"},"You must use a new API"))),(0,a.kt)("li",{parentName:"ul"},"Must use at least two different types of data",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"These data items can be from the same API (different endpoint) or different APIs",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Stores, and their names, would count as one"),(0,a.kt)("li",{parentName:"ul"},"Brightness readings would count as one"))))),(0,a.kt)("li",{parentName:"ul"},"The program must take input from the user",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Read the ",(0,a.kt)("a",{parentName:"li",href:"https://nodejs.org/api/readline.html#readline"},"Node.js documentation")))),(0,a.kt)("li",{parentName:"ul"},"The result of the program must be output somehow (either in the console or into a file)",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"You could use the ",(0,a.kt)("a",{parentName:"li",href:"https://nodejs.org/api/fs.html"},(0,a.kt)("inlineCode",{parentName:"a"},"fs")," library")," to read/write to a JSON file",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"See HW6 ",(0,a.kt)("inlineCode",{parentName:"li"},"./include/data.ts")," for examples"))))),(0,a.kt)("li",{parentName:"ul"},"The program must be documented with what it calculates exactly",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Write a multi-line comment at the top of the file"),(0,a.kt)("li",{parentName:"ul"},"A few sentences is fine"))),(0,a.kt)("li",{parentName:"ul"},"The program must produce a correct result according to its documentation"),(0,a.kt)("li",{parentName:"ul"},"At least 25 lines of code (after running ",(0,a.kt)("inlineCode",{parentName:"li"},"npm run format")," - ignoring the description comment)")),(0,a.kt)("p",null,"Pick something interesting and try to have fun with it. As long as you meet the requirements stated above, you should receive full credit."),(0,a.kt)("p",null,"You are not required to write tests for this code, however your code should execute without errors and work as intended."),(0,a.kt)("h3",{id:"if-you-are-worried-about-being-rate-limited-with-the-api-you-have-choosen"},"If you are worried about being rate limited with the api you have choosen"),(0,a.kt)("p",null,"If you would like to cache the results of an API call to an API of your choice, you can use the 220 caching server that we described in the ",(0,a.kt)("a",{parentName:"p",href:"#rate-limiting"},"Rate Limiting Section"),". Here is an example of the URL for caching the ",(0,a.kt)("a",{parentName:"p",href:"https://www.boredapi.com"},"https://www.boredapi.com"),"."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"https://220.maxkuechen.com/fetch/?url=https://www.boredapi.com/api/activity?type=recreational"),"."),(0,a.kt)("p",null,"You'll notice that some APIs, like the one above, give different responses every time. However, since we cached the response, the result will always be the same. For convenience, we are providing the following route that does not cache. You should not use this route in tests."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"htps://220.maxkuechen.com/fetch/noCache/?url=https://www.boredapi.com/api/activity?type=recreational"),"."),(0,a.kt)("p",null,"You may use the caching server for any API call in the working example, but it is not a requirement."),(0,a.kt)("h2",{id:"collaborating"},"Collaborating"),(0,a.kt)("p",null,"We recognize that this may be the first time that you have had to work in a team in your CS classes, so we want to give you the proper tools to succeed:"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("em",{parentName:"p"},"Why do we have to work in a team?"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"In other CS classes, such as 320 or 326 you will have to work closely with a team. Also, once you graduate and get a job there will be many instances where you will be asked to collaborate with others. We want students to be prepared to work with others and make sure you all have the tools to succeed later in your career."),(0,a.kt)("li",{parentName:"ul"},"The project can have a bigger scope and can be more complex when students are able to closely collaborate.")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("em",{parentName:"p"},"Why can't we choose our own groups?"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Groups are random to give students a chance to work with people they typically wouldn't. We hope that this will be a way for students to get to know each other and step out of their comfort zones."),(0,a.kt)("li",{parentName:"ul"},"We will not accommodate students switching groups to work with their friends, so don't ask.")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("em",{parentName:"p"},"How should we communicate and meet to work?"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"This is up to you as a team, but we have a few tips.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Reach out to your team early, everyone has busy schedules and communicating early is the best way to have time to collaborate.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"You are welcome to create your own group chat on some external platform (iMessage, Discord, WhatsApp, etc.), or you can create a group DM on CampusWire. Use the initial email thread to organize this.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Meet physically on campus or virtually on zoom or discord to actually discuss and work on the project. You can reserve a study space in the library here: ",(0,a.kt)("a",{parentName:"p",href:"https://libcal.library.umass.edu/reserve/groupstudyrooms"},"https://libcal.library.umass.edu/reserve/groupstudyrooms")))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("em",{parentName:"p"},"How should we collaborate?"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Even though this is a group assignment, we expect that every student understands all the concepts covered by this homework and understands the entire code that is submitted by the group."),(0,a.kt)("li",{parentName:"ul"},"All team members should contribute equally. It is natural that some team members will be more experienced with some topics of the class. It is your responsibility to ensure that everyone understands the material.")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("em",{parentName:"p"},"What if there are problems in our group?"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If you feel that there some team members are not contributing equally, or feel that there are any other problems, please make a private post on Campuswire."),(0,a.kt)("li",{parentName:"ul"},"It is expected that all students will abide by the Equity and Inclusion Statement and Academic Honesty policies posted on Canvas when interacting with other students.")),(0,a.kt)("h2",{id:"submitting"},"Submitting"),(0,a.kt)("p",null,'Only one group member should submit the final draft to Gradescope. Please add the other group members to the submission using the "Group Members" feature.'),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"https://help.gradescope.com/article/m5qz2xsnjy-student-add-group-members"},"this help article")," if you are unsure how to do so."))}c.isMDXComponent=!0},481:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/formatted-json-493f5e0f4d46003f55fcfae5acd966e5.png"},64:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/raw-json-adaf7f49ddcea3bef8a9be9b3e82e4bf.png"}}]);